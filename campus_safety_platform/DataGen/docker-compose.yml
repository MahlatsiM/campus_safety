services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:6.2.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Mahlatsi#0310"
      POSTGRES_DB: "campus_safety"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro   # init SQL (runs only on first container start)
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  app:
    build: .
    container_name: campus_safety_app
    volumes:
      - .:/app
    environment:
      # Consumer and Django (if you run it) will read DATABASE_URL
      DATABASE_URL: "postgres://postgres:Mahlatsi%230310@postgres:5432/campus_safety"
      # optional debug key
      SECRET_KEY: "supersecretkey"
      DEBUG: "1"
    depends_on:
      - postgres
      - kafka
      - redis
    restart: unless-stopped

  producer:
    image: campus_safety_app   # uses same built image
    container_name: campus_safety_producer
    command: ["python", "producer.py"]
    environment:
      KAFKA_BOOTSTRAP: "kafka:9092"
    depends_on:
      - kafka
    restart: unless-stopped

  consumer:
    image: campus_safety_app
    container_name: campus_safety_consumer
    command: ["python", "consumer.py"]
    environment:
      KAFKA_BOOTSTRAP: "kafka:9092"
      DATABASE_URL: "postgres://postgres:Mahlatsi%230310@postgres:5432/campus_safety"
    depends_on:
      - kafka
      - postgres
    restart: unless-stopped

volumes:
  pgdata: